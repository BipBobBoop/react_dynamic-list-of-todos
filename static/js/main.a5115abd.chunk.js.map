{"version":3,"sources":["types/FIlter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","modal","updateModal","className","map","todo","isPressed","id","classNames","completed","title","type","onClick","TodoFilter","filter","updateFilter","updateQuery","useState","valueSelect","setValueSelect","valueSearch","setValueSearch","useEffect","onSubmit","event","preventDefault","value","onChange","target","Object","values","option","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","deleteModal","user","setUser","userId","href","email","name","App","setTodos","All","setFilter","query","setQuery","setModal","filteredTodos","Active","includes","Completed","newFilter","newQuery","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5115abd.chunk.js","sourcesContent":["export enum Filter {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  modal: Todo | null;\n  updateModal: (newTodo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, modal, updateModal }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const isPressed = modal ? modal.id === todo.id : false;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              key={todo.id}\n              className={classNames({\n                'has-background-info-light': isPressed,\n              })}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => updateModal(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames('far', {\n                        'fa-eye': !isPressed,\n                        'fa-eye-slash': isPressed,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Filter } from '../../types/FIlter';\n\ntype Props = {\n  filter: Filter\n  updateFilter: (newFilter: Filter) => void,\n  updateQuery: (newQuery: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  updateFilter,\n  updateQuery,\n}) => {\n  const [valueSelect, setValueSelect] = useState<Filter>(filter);\n  const [valueSearch, setValueSearch] = useState('');\n\n  useEffect(() => {\n    updateQuery(valueSearch);\n  }, [valueSearch]);\n\n  useEffect(() => {\n    updateFilter(valueSelect);\n  }, [valueSelect]);\n\n  const handlerSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setValueSelect(event.target.value as Filter);\n  };\n\n  const handlerSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValueSearch(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={valueSelect}\n            data-cy=\"statusSelect\"\n            onChange={handlerSelect}\n          >\n            {Object.values(Filter).map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={valueSearch}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handlerSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {valueSearch.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"delete\"\n              onClick={() => setValueSearch('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL}${url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  modal: Todo,\n  deleteModal: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  modal,\n  deleteModal,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(modal.userId).then(setUser);\n  }, [modal]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${modal.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"modal-close\"\n              onClick={deleteModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {modal.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-danger': !modal.completed,\n                'has-text-success': modal.completed,\n              })}\n              >\n                {modal.completed ? 'Done' : 'Planned'}\n              </strong>\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/FIlter';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState(Filter.All);\n  const [query, setQuery] = useState('');\n  const [modal, setModal] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const filteredTodos = todos.filter(todo => {\n    switch (filter) {\n      case Filter.Active:\n        return !todo.completed && todo.title.includes(query);\n      case Filter.Completed:\n        return todo.completed && todo.title.includes(query);\n      case Filter.All:\n      default:\n        return todo.title.includes(query);\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                updateFilter={(newFilter) => setFilter(newFilter)}\n                updateQuery={(newQuery) => setQuery(newQuery)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  modal={modal}\n                  updateModal={(newTodo) => setModal(newTodo)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modal && (\n        <TodoModal\n          modal={modal}\n          deleteModal={() => setModal(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}