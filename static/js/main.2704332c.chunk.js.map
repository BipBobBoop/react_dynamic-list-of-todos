{"version":3,"sources":["types/FIlter.ts","components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/ErrorModal/ErrorModal.tsx","App.tsx","index.tsx"],"names":["Filter","Loader","className","TodoList","todos","modal","updateModal","map","todo","id","title","completed","isPressed","classNames","type","onClick","TodoFilter","filter","updateFilter","query","updateQuery","onSubmit","event","preventDefault","value","onChange","target","Object","values","option","name","slice","toUpperCase","length","toLowerCase","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","deleteModal","updateErrorMessage","useState","user","setUser","isLoading","setIsLoading","userId","useEffect","timeoutId","getUser","userData","clearTimeout","catch","error","href","email","ErrorModal","message","window","location","reload","App","setTodos","All","setFilter","setQuery","setModal","errorMessage","setErrorMessage","todosData","filteredTodos","lowerCaseQuery","lowerCaseTitle","Active","includes","Completed","newFilter","newQuery","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2704332c.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  modal: Todo | null;\n  updateModal: (newTodo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, modal, updateModal }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n          const isPressed = modal ? modal.id === id : false;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              key={id}\n              className={classNames({\n                'has-background-info-light': isPressed,\n              })}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => updateModal(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames('far', {\n                        'fa-eye': !isPressed,\n                        'fa-eye-slash': isPressed,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/FIlter';\n\ntype Props = {\n  filter: Filter\n  updateFilter: (newFilter: Filter) => void,\n  query: string,\n  updateQuery: (newQuery: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  updateFilter,\n  query,\n  updateQuery,\n}) => {\n  const handlerSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    updateFilter(event.target.value as Filter);\n  };\n\n  const handlerSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateQuery(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={filter}\n            data-cy=\"statusSelect\"\n            onChange={handlerSelect}\n          >\n            {Object.values(Filter).map((option) => {\n              const name = option.slice(0, 1).toUpperCase()\n              + option.slice(1, option.length).toLowerCase();\n\n              return (\n                <option key={option} value={option}>\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handlerSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"delete\"\n              onClick={() => updateQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL}${url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  modal: Todo,\n  deleteModal: () => void\n  updateErrorMessage: (error: string) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  modal,\n  deleteModal,\n  updateErrorMessage,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = modal;\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      updateErrorMessage('Request timed out');\n      setIsLoading(false);\n    }, 3000);\n\n    getUser(userId)\n      .then(userData => {\n        clearTimeout(timeoutId);\n        setUser(userData);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        clearTimeout(timeoutId);\n        updateErrorMessage(`Error fetching user data. ${error}`);\n        setIsLoading(false);\n      });\n  }, [modal]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && <Loader />}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"modal-close\"\n              onClick={deleteModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  message: string,\n};\n\nexport const ErrorModal: React.FC<Props> = ({ message }) => {\n  const handleReload = () => {\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" />\n      <div className=\"modal-content\">\n        <div className=\"box has-text-centered\">\n          <p className=\"title is-3 has-text-danger\">{message}</p>\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={handleReload}\n          >\n            Reload Page\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Loader } from './components/Loader';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/FIlter';\nimport { ErrorModal } from './components/ErrorModal/ErrorModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState(Filter.All);\n  const [query, setQuery] = useState('');\n  const [modal, setModal] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setErrorMessage('Request timed out');\n      setIsLoading(false);\n    }, 3000);\n\n    getTodos()\n      .then(todosData => {\n        clearTimeout(timeoutId);\n        setTodos(todosData);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        clearTimeout(timeoutId);\n        setErrorMessage(`Error fetching todos data. ${error}`);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const filteredTodos = todos.filter(todo => {\n    const lowerCaseQuery = query.toLowerCase();\n    const lowerCaseTitle = todo.title.toLowerCase();\n\n    switch (filter) {\n      case Filter.Active:\n        return !todo.completed && lowerCaseTitle.includes(lowerCaseQuery);\n      case Filter.Completed:\n        return todo.completed && lowerCaseTitle.includes(lowerCaseQuery);\n      case Filter.All:\n      default:\n        return lowerCaseTitle.includes(lowerCaseQuery);\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                updateFilter={(newFilter) => setFilter(newFilter)}\n                query={query}\n                updateQuery={(newQuery) => setQuery(newQuery)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  modal={modal}\n                  updateModal={setModal}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modal && (\n        <TodoModal\n          modal={modal}\n          deleteModal={() => setModal(null)}\n          updateErrorMessage={(error: string) => setErrorMessage(error)}\n        />\n      )}\n\n      {errorMessage && <ErrorModal message={errorMessage} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}